<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 클래스 경로 -->
<mapper namespace="kr.or.yi.teamProject.order.mapper.OrderDetailMapper">


<!-- id : Dao 메서드와 동일하게 -->
<!-- parameterType (입력 값) : 가급적 Dto, 불가피한 경우 해시맵 -->
<!-- resultType (결과 값) : 가급적 Dto, 불가피한 경우 해시맵 -->

     <resultMap type="kr.or.yi.teamProject.order.dto.OrderDetail" id="orderDetailMap">
     <!-- Order -->
       <id property="orderNo" column="order_no"/>	<!-- 주문번호  -->
       <result property="zipcode" column="zipcode"/><!-- 우편번호 -->
       <result property="address1" column="address1"/><!-- 주소앞 -->
       <result property="address2" column="address2"/><!-- 주소상세 -->
       <result property="name" column="name"/>		<!-- 받는분 -->
       <result property="phone" column="phone"/>	<!-- 휴대폰 -->
       <result property="regDate" column="reg_date"/><!-- 생성일자 -->
       <result property="point" column="point"/>	<!-- 포인트 사용액 -->
       <result property="status" column="status"/>	<!-- 주문상태 -->
       <result property="cnt" column="cnt"/>	<!-- 주문상태 -->
       
       <!-- Member 아이디,이름,이메일,연락처-->
       <association property="member" javaType="kr.or.yi.teamProject.user.dto.Member">
			<id property="username" column="username"/>
			<result property="name" column="name"/> 
			<result property="email" column="email"/>      		
			<result property="phone" column="phone"/>      		
       </association>
       
       <!-- NonMember 아이디,이메일,연락처-->
       <association property="nonMember" javaType="kr.or.yi.teamProject.user.dto.NonMember">
			<id property="nonUsername" column="non_username"/>
			<result property="email" column="email"/>      		
			<result property="phone" column="phone"/>      		
       </association>
       
       <!-- OrderItem 주문상품 번호, 상품금액, 할인금액, 쿠폰금액, 옵션번호, 옵션명, 옵션번호, 상품번호, 상품이름, 재고수량-->
       <collection property="itemList" ofType="kr.or.yi.teamProject.order.dto.OrderItem">
			<id property="orderItemNo" column="order_item_no"/>		<!-- 주문상품 번호  -->
       		<result property="priceItem" column="price_item"/>		<!-- 상품 금액 -->
       		<result property="priceOption" column="price_option"/>	<!-- 옵션 금액 -->
       		<result property="priceCoupon" column="price_coupon"/>	<!-- 할인 금액 -->
       		<result property="optionName" column="option_name"/>	<!-- 옵션명 -->
       		<result property="couponHistory.coupon.couponNo" column="coupon_no"/>	<!-- 쿠폰번호 -->
       		<result property="couponHistory.coupon.name" column="name"/>	<!-- 할인 명 -->
       		
       		<!-- Option -->
			<association property="option" javaType="kr.or.yi.teamProject.product.dto.Option">
	            <id property="optionNo" column="option_no"/>		<!-- 옵션번호 -->
	            <result property="name" column="op_name"/>			<!-- 옵션이름 -->
	            <result property="optionPrice" column="option_price"/><!-- 옵션가격 -->
	            <result property="stock" column="stock"/>			<!-- 수량 -->
	            <association property="item"  javaType="kr.or.yi.teamProject.product.dto.Item">
	            	<id property="itemNo" column="item_no"/>
	            	<result property="name" column="i_name"/>	<!-- 상품명 -->	            	           
	               <result property="price" column="price"/>	<!-- 상품가격 -->	  
	               <result property="discount" column="discount"/>	<!-- 상품 할인가격 -->	 
	               <result property="image" column="image"/>	<!-- 상품 이미지 -->	 
               </association>	            	           
			</association>	

       </collection>
       
       <!-- Payment  -->
       <collection property="paymentList" ofType="kr.or.yi.teamProject.payment.dto.Payment">
       		<id property="paymentNo" column="payment_no"/>
       		<result property="amount" column="amount"/>
       		<result property="method" column="method"/>
       </collection>
    </resultMap> 

 <!-- selectOrderByOrderNo -->
 	<select id="selectDetailOrder" parameterType="kr.or.yi.teamProject.order.dto.OrderDetail" resultMap="orderDetailMap">			       
		SELECT oi.`order_item_no`,
	           oi.`price_item`,
			   oi.`price_option`,			 
			   oi.`option_no`, 
			   oi.`price_coupon`,
			   o.`order_no` ,
			   o.`username` ,
			   o.`reg_date`,
			   o.`status`,
			   op.`option_price`,
			   op.`name` as `op_name`,
			   i.`item_no`,
			   i.`name` as `i_name`,
			   i.`price`,
			   i.`discount`,
			   i.`image`,
			   pay.`payment_no`,
      		   pay.`amount`, 		   
      		   pay.`method`	   
		FROM `order` o join `order_item` oi on oi.`order_no` =  o.`order_no`
		left outer join `member` m on o.username = m.username 
		left outer join `option` op on oi.option_no = op.option_no 
		left outer join coupon_history ch on oi.issue_number = ch.issue_number 
		left outer join item i on i.item_no = op.item_no 
		left outer join `payment` as pay on pay.`order_no` = o.`order_no`
		where o.`order_no` = #{orderNo}
 	</select>


 <!-- selectOrderListByMember -->
 	<select id="orderDetailSelectList" parameterType="kr.or.yi.teamProject.user.dto.Member" resultMap="orderDetailMap">			       
		SELECT oi.`order_item_no`,
	           oi.`price_item`,
			   oi.`price_option`,			 
			   oi.`option_no`, 
			   oi.`price_coupon`,
			   o.`order_no` ,
			   o.`username` ,
			   o.`reg_date`,
			   o.`status`,
			   op.`option_price`,
			   op.`name` as `op_name`,
			   i.`item_no`,
			   i.`name` as `i_name`,
			   i.`price`,
			   i.`discount`,
			   i.`image`,
			   pay.`payment_no`,
      		   pay.`amount`		   
		FROM `order` o join `order_item` oi on oi.`order_no` =  o.`order_no`
		left outer join `member` m on o.username = m.username 
		left outer join `option` op on oi.option_no = op.option_no 
		left outer join coupon_history ch on oi.issue_number = ch.issue_number 
		left outer join item i on i.item_no = op.item_no 
		left outer join `payment` as pay on pay.`order_no` = o.`order_no`
		where o.`username` = #{username}
		order by o.`reg_date` desc
 	</select>

 <!-- selectOrderList -->
 	<select id="ordetDetailList" resultMap="orderDetailMap">			       
		SELECT oi.`order_item_no`,
	           oi.`price_item`,
			   oi.`price_option`,			 
			   oi.`option_no`, 
			   oi.`price_coupon`,
			   o.`order_no` ,
			   o.`username` ,
			   o.`reg_date`,
			   o.`status`,
			   op.`option_price`,
			   op.`name` as `op_name`,
			   i.`item_no`,
			   i.`name` as `i_name`,
			   i.`price`,
			   i.`discount`,
			   i.`image`,
			   pay.`payment_no`,
      		   pay.`amount`,
      		   COUNT(o.`order_no`) as `cnt`  		   
		FROM `order` o join `order_item` oi on oi.`order_no` =  o.`order_no`
		left outer join `member` m on o.username = m.username 
		left outer join `option` op on oi.option_no = op.option_no 
		left outer join item i on i.item_no = op.item_no 
		left outer join `payment` as pay on pay.`order_no` = o.`order_no`
		group by o.`order_no`
		order by o.`reg_date` desc
 	</select>


    <select id="selectOrderList" parameterType="kr.or.yi.teamProject.common.dto.Pager"
            resultMap="orderDetailMap">
        SELECT oi.`order_item_no`,
	           oi.`price_item`,
			   oi.`price_option`,			 
			   oi.`option_no`, 
			   oi.`price_coupon`,
			   o.`order_no` ,
			   o.`username` ,
			   o.`reg_date`,
			   o.`status`,
			   m.`name`,
			   op.`option_price`,
			   op.`name` as `op_name`,
			   i.`item_no`,
			   i.`name` as `i_name`,
			   i.`price`,
			   i.`discount`,
			   i.`image`,
			   pay.`payment_no`,
      		   pay.`amount`,
      		   COUNT(o.`order_no`) as `cnt`  
         FROM `order` o
         JOIN `order_item` oi on oi.`order_no` =  o.`order_no`
		LEFT OUTER JOIN `member` m on o.username = m.username 
		LEFT OUTER JOIN `option` op on oi.option_no = op.option_no 
		LEFT OUTER JOIN item i on i.item_no = op.item_no 
		LEFT OUTER JOIN `payment` as pay on pay.`order_no` = o.`order_no`
        WHERE `publish` = true AND `hide` = false
        <if test="category != null and category != ''">
            AND `category_no` = #{category}
        </if>
        <if test="keyword != null and keyword != ''">
            AND `name` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        group by o.`order_no`
        ORDER BY o.`reg_date` ${order}
        LIMIT #{startRecord}, #{amount}
    </select>

  <select id="getInfoForPaging" parameterType="kr.or.yi.teamProject.common.dto.Pager"
            resultType="kr.or.yi.teamProject.common.dto.Pager">
        <![CDATA[
        SELECT `total_records`,
               `final_page_no`,
               `start_page`,
               if(@final_page > @end_page, @end_page, @final_page) `end_page`,
               @start_page - 1 `prev`,
               if(@final_page > @end_page, @end_page + 1, 0) `next`,
               (#{pageNo} - 1) * #{amount} `start_record`,
               #{amount} `amount`,
               #{pageNo} `page_no`,
               #{order} `order`,
               #{linkCount} `link_count`,
               #{category} `category`,
               #{keyword} `keyword`
        FROM (SELECT @total_recode := COUNT(*) `total_records`,
            @final_page := CEIL(COUNT(*) / #{amount}) `final_page_no`,
            @start_page := truncate(((#{pageNo} - 1) / #{linkCount}), 0) * #{linkCount} + 1 `start_page`,
            @end_page := truncate(((#{pageNo} - 1) / #{linkCount}), 0) * #{linkCount} + #{linkCount}
            FROM `order`
        ]]>
            <where>
                <if test="category != null and category != ''">
                    `category_no` = #{category}
                </if>
                <if test="keyword != null and keyword != ''">
                    AND `name` LIKE CONCAT('%', #{keyword}, '%')
                </if>
            </where>
            ) a
    </select>


 	

 	
</mapper>